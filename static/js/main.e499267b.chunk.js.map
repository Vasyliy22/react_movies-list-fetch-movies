{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","m","useState","searchValue","setSearchValue","setMovies","setMovie","isError","setIsError","isLoading","setIsLoading","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","placeholder","classNames","onClick","query","fetch","then","res","json","catch","Response","Error","foundMovie","Title","Plot","Poster","imdbID","disabled","find","item","App","ReactDOM","render","document","getElementById"],"mappings":"4UAQaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SACGD,EAAMK,aAKb,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC9BGC,G,MAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,eCNNC,G,MAAsB,WACjC,IAkCwBC,EAlCxB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAkB,IAA9C,mBAAOL,EAAP,KAAeQ,EAAf,KACA,EAA0BH,mBAAuB,MAAjD,mBAAOf,EAAP,KAAcmB,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KA8CA,OACE,mCACE,sBAAKtB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAEtB,sBAAKT,UAAU,UAAf,UACE,uBAAMA,UAAU,aAAauB,SAXhB,SAACC,GACpBA,EAAMC,kBAUA,UACE,sBAAKzB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ0B,QAAQ,cAAjC,yBAIA,qBAAK1B,UAAU,UAAf,SACE,uBACE,UAAQ,aACR2B,KAAK,OACLC,GAAG,cACHC,MAAOd,EACPe,SA/DW,SAACN,GAC1BR,EAAeQ,EAAMO,OAAOF,OAC5BT,GAAW,IA8DGY,YAAY,0BACZhC,UAAU,sBAIbmB,GACC,mBAAGnB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACR2B,KAAK,SACL3B,UAAWiC,IAAW,kBACpB,CAAE,aAAcZ,IAClBa,QA9EU,WCfrB,IAAkBC,EDgBrBb,GAAa,IChBQa,EDiBZpB,EChBJqB,MAAM,GAAD,OAHE,2CAGF,cAAiBD,IAC1BE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,wBDYaL,MAAK,SAAAC,GAEzB,GADAhB,GAAa,GACT,UAAWgB,EACblB,GAAW,OACN,CACL,IAAMuB,EAAoB,CACxBvC,MAAOkC,EAAIM,MACXvC,YAAaiC,EAAIO,KACjB3C,OAAuB,QAAfoC,EAAIQ,OACRR,EAAIQ,OACJ,4DACJvC,QAAQ,8BAAD,OAAgC+B,EAAIS,QAC3CpC,OAAQ2B,EAAIS,QAGd7B,EAASyB,GACT3B,EAAe,SA6DLgC,UAAWjC,EANb,SASKhB,EAEG,eADA,mBAMV,qBAAKC,UAAU,UAAf,SACGD,GACC,wBACE,UAAQ,YACR4B,KAAK,SACL3B,UAAU,oBACVkC,SAxEMrB,EAwEkBd,EAxEL,WACdU,EAAOwC,MAAK,SAAAC,GAAI,OAAIA,EAAKvC,SAAWE,EAAEF,WAGzDM,EAAU,GAAD,mBAAKR,GAAL,CAAaI,KAGxBG,EAAe,IACfI,GAAW,GACXF,EAAS,QA2DK,qCAaPnB,GACC,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,iBE3HnBoD,EAAgB,WAC3B,OACE,qBAAKnD,UAAU,UAAf,SACE,cAAC,EAAD,OCHNoD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e499267b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">\n              {movie.title}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MoviesList } from '../MoviesList';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\n\nexport const FindMovie: React.FC = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleChangeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(event.target.value);\n    setIsError(false);\n  };\n\n  const handleClickSearch = () => {\n    setIsLoading(true);\n    getMovie(searchValue).then(res => {\n      setIsLoading(false);\n      if ('Error' in res) {\n        setIsError(true);\n      } else {\n        const foundMovie: Movie = {\n          title: res.Title,\n          description: res.Plot,\n          imgUrl: res.Poster !== 'N/A'\n            ? res.Poster\n            : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n          imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n          imdbId: res.imdbID,\n        };\n\n        setMovie(foundMovie);\n        setSearchValue('');\n      }\n    });\n  };\n\n  const handleAddMovie = (m: Movie) => () => {\n    const foundedMovie = movies.find(item => item.imdbId === m.imdbId);\n\n    if (!foundedMovie) {\n      setMovies([...movies, m]);\n    }\n\n    setSearchValue('');\n    setIsError(false);\n    setMovie(null);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <form className=\"find-movie\" onSubmit={handleSubmit}>\n            <div className=\"field\">\n              <label className=\"label\" htmlFor=\"movie-title\">\n                Movie title\n              </label>\n\n              <div className=\"control\">\n                <input\n                  data-cy=\"titleField\"\n                  type=\"text\"\n                  id=\"movie-title\"\n                  value={searchValue}\n                  onChange={handleChangeSearch}\n                  placeholder=\"Enter a title to search\"\n                  className=\"input is-dander\"\n                />\n              </div>\n\n              {isError && (\n                <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                  Can&apos;t find a movie with such a title\n                </p>\n              )}\n            </div>\n\n            <div className=\"field is-grouped\">\n              <div className=\"control\">\n                <button\n                  data-cy=\"searchButton\"\n                  type=\"submit\"\n                  className={classNames('button is-light',\n                    { 'is-loading': isLoading })}\n                  onClick={handleClickSearch}\n                  disabled={!searchValue}\n                >\n                  {\n                    !movie\n                      ? 'Find a movie'\n                      : 'Search again'\n                  }\n                </button>\n              </div>\n\n              <div className=\"control\">\n                {movie && (\n                  <button\n                    data-cy=\"addButton\"\n                    type=\"button\"\n                    className=\"button is-primary\"\n                    onClick={handleAddMovie(movie)}\n                  >\n                    Add to the list\n                  </button>\n                )}\n              </div>\n            </div>\n          </form>\n\n          {movie && (\n            <div className=\"container\" data-cy=\"previewContainer\">\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard movie={movie} />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a5abb59c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React from 'react';\nimport './App.scss';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"sidebar\">\n      <FindMovie />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}